on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: "rid1hady/senna-action-server"
  REGISTRY: "docker.io"
  COMMAND: "python -m rasa_sdk --actions actions"

name: Deploy Action Server

jobs:
  build_and_push_action_server:
    name: Build and Push Action Server to DockerHub
    runs-on: ubuntu-latest
    outputs:
      docker_image_name: ${{ steps.build_push_action_server.outputs.docker_image_name }}
      docker_image_full_name: ${{ steps.build_push_action_server.outputs.docker_image_full_name }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - id: build_push_action_server
      name: Build Action Server image
      uses: RasaHQ/rasa-action-server-gha@v1.0.3
      with:
        rasa_sdk_version: '2.4.0'
        requirements_file: actions/requirements-actions.txt
        docker_image_name: ${{ env.IMAGE_NAME }}
        docker_registry_login: ${{ secrets.DOCKER_HUB_LOGIN }}
        docker_registry_password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        docker_image_tag: ${{ github.sha }}
        docker_registry: ${{ env.REGISTRY }}
        docker_build_args: "--build-arg GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY}}"
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_action_server
    environment: production
    steps:
    - name: Deploy to Digital Ocean Droplet
      uses: appleboy/ssh-action@v0.1.3
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSHKEY }}
        envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,GOOGLE_MAPS_API_KEY,COMMAND
        script: |
          docker stop $(echo $IMAGE_NAME)
          docker rm $(echo $IMAGE_NAME)

          docker run -d \
          --restart always \
          -p 5055:5055 \
          --name $(echo ${{ needs.build_and_push_action_server.outputs.docker_image_name }}) \
          $(echo ${{ needs.build_and_push_action_server.outputs.docker_image_full_name }}) $(echo $COMMAND)
