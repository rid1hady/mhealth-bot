on:
  push:
    branches:
      - main

name: Train and Test Rasa Model

jobs:
  # train_test:
  #   name: Train and Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: RasaHQ/rasa-train-test-gha@main
  #       with:
  #         rasa_version: '2.4.0-full'
  #         configuration: 'config-github.yml'
  #     - name: Upload model
  #       if: github.ref == 'refs/heads/main'
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: model
  #         path: models
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Deploy to Digital Ocean Droplet
      uses: appleboy/ssh-action@v0.1.3
      env:
        ACTION_URL: ${{ secrets.ACTION_URL }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
        LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
        LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        envs: ACTION_URL,MONGODB_URL,GOOGLE_MAPS_API_KEY,LINE_CHANNEL_SECRET,LINE_CHANNEL_ACCESS_TOKEN
        script: |
          cd /www/psymax
          git pull origin main

          echo "GOOGLE_MAPS_API_KEY=$(echo $GOOGLE_MAPS_API_KEY)" > .env.docker
          echo "LINE_CHANNEL_SECRET=$(echo $LINE_CHANNEL_SECRET)" >> .env.docker
          echo "LINE_CHANNEL_ACCESS_TOKEN=$(echo $LINE_CHANNEL_ACCESS_TOKEN)" >> .env.docker
          echo "MONGODB_URL=$(echo $MONGODB_URL)" >> .env.docker
          echo "ACTION_URL=$(echo $ACTION_URL)" >> .env.docker

          docker-compose stop
          docker-compose rm -f
          docker-compose --env-file .env.docker up -d --build
