on:
  push:
    branches:
      - main

name: CI / CD

jobs:
  train_test:
    name: Train and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: RasaHQ/rasa-train-test-gha@main
        with:
          rasa_version: '2.4.0-full'
          configuration: './config-github.yml'
      - name: Upload model
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: model
          path: models
  upload_to_s3:
    name: Upload trained model to S3
    needs: train_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: actions/download-artifact@v2
        with:
          path: models
      - name: Copy files to the buckets with the AWS CLI
        run: |
          aws s3 cp models s3://psymax-models/model-latest.tar.gz
      
  # deploy:
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #   - name: Deploy to Digital Ocean Droplet
  #     uses: appleboy/ssh-action@v0.1.3
  #     env:
  #       ACTION_URL: ${{ secrets.ACTION_URL }}
  #       MONGODB_URL: ${{ secrets.MONGODB_URL }}
  #       GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
  #       LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
  #       LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.SSHKEY }}
  #       envs: ACTION_URL,MONGODB_URL,GOOGLE_MAPS_API_KEY,LINE_CHANNEL_SECRET,LINE_CHANNEL_ACCESS_TOKEN
  #       script: |
  #         cd /www/psymax
  #         git pull origin main

  #         docker-compose stop
  #         docker-compose rm -f
  #         docker-compose --env-file .env.docker up -d --build
